# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CICD

on:
  push:
    branches: [ main ]
#   release:
#     types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build lambda code
        working-directory: src/functions
        run: yarn install --frozen-lockfile && tsc */*.ts

  validate_cdk_tests:
    name: Run Infrastructure test
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: test lambda code
        run: |
          yarn install --frozen-lockfile
          npm test
  
  validate_stack:
    name: Synth and validate CDK
    needs: [validate_cdk_tests]
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install cdk
        run: npm i -g aws-cdk
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install deps
        run: yarn install --frozen-lockfile
      - name: CDK Synth
        id: cdk-synth-step
        run: cdk synth

  list_changes:
    name: List Changes in Stack
    needs: [build, validate_stack]
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install cdk
        run: npm i -g aws-cdk
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install deps
        run: yarn install --frozen-lockfile
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: CDK Diff PR run
        id: cdk-diff-step
        run: cdk diff
    
      # - name: Comment on PR
      #   run: |
      #     echo ${{steps.cdk-diff-step.outputs.cdk-diff}}
  deploy_changes:
    name: Deploy Changes to AWS
    needs: [list_changes]
    runs-on: ubuntu-latest
    environment: 
      name: prod
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install cdk
        run: npm i -g aws-cdk
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: install deps
        run: yarn install --frozen-lockfile
  
      - name: Build lambda code
        working-directory: src/functions
        run: npm i && tsc */*.ts
    
      - name: CDK Deploy
        id: cdk-deploy-step
        run: cdk diff # cdk deploy --require-approval never    
      # - name: Comment on PR
      #   run: |
      #     echo ${{steps.cdk-diff-step.outputs.cdk-diff}}
